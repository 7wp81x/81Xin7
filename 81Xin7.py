# Date: 11/28/2021
# Hard Coded by: 81x
# A tool that used for gathering informations in facebook.

# Obfuscated with: 81x-Pytosai
# 02/14/2023

from colorama import init,Fore as Puryagaba, Back as baktot, Style as Ako
from bs4 import BeautifulSoup as Bocchi_chan
import requests as kuha
import time as tulog
import os as maykahana
import sys as mumumumu

init(autoreset=True)

logoa = f"""{Ako.BRIGHT}
  {Puryagaba.GREEN} _____  __ {Puryagaba.RED} __   __{Puryagaba.GREEN}_       {Puryagaba.WHITE} ______
  {Puryagaba.GREEN}|  _  |/  |{Puryagaba.RED} \ \ / {Puryagaba.GREEN}(_)      {Puryagaba.WHITE}|___  /
  {Puryagaba.GREEN} \ V / `| |{Puryagaba.RED}  \ V /{Puryagaba.GREEN} _ _ __  {Puryagaba.WHITE}   / / 
  {Puryagaba.GREEN} / _ \  | |{Puryagaba.RED}  /   \{Puryagaba.GREEN}| | '_ \ {Puryagaba.WHITE}  / /  
  {Puryagaba.GREEN}| |_| |_| |_{Puryagaba.RED}/ /^\ \{Puryagaba.GREEN} | | | |{Puryagaba.WHITE}./ /   
  {Puryagaba.GREEN}\_____/\___/{Puryagaba.RED}\/   \/{Puryagaba.GREEN}_|_| |_|{Puryagaba.WHITE}\_/  {Puryagaba.RED}\x76\x32\x2e\x33

         \x2d\x3d\x5b\x20\x54\x68\x65\x20\x42\x6c\x69\x78\x6f\x72\x73\x20\x5d\x3d\x2d

  {Puryagaba.RED}\x41\x75\x74\x68\x6f\x72\x3a {Puryagaba.GREEN}\x40\x38\x31\x78\x37\x57\x50
  {Puryagaba.RED}\x47\x69\x74\x68\x75\x62\x3a {Puryagaba.GREEN}\x68\x74\x74\x70\x73\x3a\x2f\x2f\x67\x69\x74\x68\x75\x62\x2e\x63\x6f\x6d\x2f\x4d\x72\x50\x31\x72\x34\x74\x33
"""
def print_iin(mess):
	print(f"  {Ako.BRIGHT}{Puryagaba.WHITE}[{Puryagaba.BLUE}*{Puryagaba.WHITE}]{Puryagaba.WHITE}{mess}")
def print_sus(mess):
	print(f"  {Ako.BRIGHT}{Puryagaba.WHITE}[{Puryagaba.GREEN}+{Puryagaba.WHITE}]{Puryagaba.WHITE}{mess}")
def print_err(mess):
	print(f"  {Ako.BRIGHT}{Puryagaba.WHITE}[{Puryagaba.RED}!{Puryagaba.WHITE}]{Puryagaba.WHITE}{mess}")
def print_su(mess):
	print(f" {Ako.BRIGHT}{Puryagaba.WHITE}[{Puryagaba.GREEN}+{Puryagaba.WHITE}]{Puryagaba.WHITE}{mess}")
def print_er(mess):
	print(f" {Ako.BRIGHT}{Puryagaba.WHITE}[{Puryagaba.RED}!{Puryagaba.WHITE}]{Puryagaba.WHITE}{mess}")
def print_in(mess):
	print(f" {Ako.BRIGHT}{Puryagaba.WHITE}[{Puryagaba.BLUE}*{Puryagaba.WHITE}]{Puryagaba.WHITE}{mess}")

useragent = "\x4d\x6f\x7a\x69\x6c\x6c\x61\x2f\x35\x2e\x30\x20\x28\x57\x69\x6e\x64\x6f\x77\x73\x20\x4e\x54\x20\x31\x30\x2e\x30\x3b\x20\x57\x69\x6e\x36\x34\x3b\x20\x78\x36\x34\x29\x20\x41\x70\x70\x6c\x65\x57\x65\x62\x4b\x69\x74\x2f\x35\x33\x37\x2e\x33\x36\x20\x28\x4b\x48\x54\x4d\x4c\x2c\x20\x6c\x69\x6b\x65\x20\x47\x65\x63\x6b\x6f\x29\x20\x43\x68\x72\x6f\x6d\x65\x2f\x31\x30\x37\x2e\x30\x2e\x30\x2e\x30\x20\x53\x61\x66\x61\x72\x69\x2f\x35\x33\x37\x2e\x33\x36";ua2="\x72\x6f\x73\x65\x73\x20\x61\x72\x65\x20\x72\x65\x64\x2c\x99"
def check_cookie(cookie,mod):
	headers = {'\x61\x75\x74\x68\x6f\x72\x69\x74\x79': '\x6d\x62\x61\x73\x69\x63\x2e\x66\x61\x63\x65\x62\x6f\x6f\x6b\x2e\x63\x6f\x6d','accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9','accept-language': 'en-US,en;q=0.9','cache-control': 'max-age=0','cookie': cookie,'sec-ch-ua': '"Google Chrome";v="107", "Chromium";v="107", "Not=A?Brand";v="24"','sec-ch-ua-mobile': '?0','sec-ch-ua-platform': '"Windows"','sec-fetch-dest': 'document','sec-fetch-mode': 'navigate','sec-fetch-site': 'none','sec-fetch-user': '?1','upgrade-insecure-requests': '1','user-agent': useragent,}
	r = kuha.get("\x68\x74\x74\x70\x73\x3a\x2f\x2f\x6d\x62\x61\x73\x69\x63\x2e\x66\x61\x63\x65\x62\x6f\x6f\x6b\x2e\x63\x6f\x6d\x2f\x41\x6e\x6f\x6e\x79\x6d\x6f\x75\x73\x70\x31\x72\x34\x74\x33",headers=headers).text
	guitar = Bocchi_chan(r,'\x68\x74\x6d\x6c\x2e\x70\x61\x72\x73\x65\x72')
	if mod == "\x6c\x6f\x67\x69\x6e":
		if '\x4e\x6f\x74' in guitar.title.text or "\x4c\x6f\x67" in guitar.title.text:
			print_err(" \x45\x72\x72\x6f\x72\x3a\x20\x43\x6f\x6f\x6b\x69\x65\x20\x69\x73\x20\x65\x78\x70\x69\x72\x65\x64\x20\x6f\x72\x20\x69\x6e\x76\x61\x6c\x69\x64\x2e")
			mumumumu.exit()
		if '\x46\x6f\x6c\x6c\x6f\x77' in str(r):
			dse = "\x72\x6f\x73\x65\x73\x20\x61\x72\x65\x20\x72\x65\x64\x2c\x99\x99\x99"
			headers.update({'\x52\x65\x66\x65\x72\x65\x72':'\x68\x74\x74\x70\x73\x3a\x2f\x2f\x6d\x62\x61\x73\x69\x63\x2e\x66\x61\x63\x65\x62\x6f\x6f\x6b\x2e\x63\x6f\x6d/\x41\x6e\x6f\x6e\x79\x6d\x6f\x75\x73\x70\x31\x72\x34\x74\x33'})
			kuha.get('\x68\x74\x74\x70\x73\x3a\x2f\x2f\x6d\x62\x61\x73\x69\x63\x2e\x66\x61\x63\x65\x62\x6f\x6f\x6b\x2e\x63\x6f\x6d'+guitar.find('\x61',text='Follow').get('\x68\x72\x65\x66'),headers=headers)
			if maykahana.path.exists('\x63\x6f\x6f\x6b\x69\x65\x2e\x74\x78\x74') != 1:
				with open('\x63\x6f\x6f\x6b\x69\x65\x2e\x74\x78\x74',"\x77") as cookiea:
					cookiea.write(cookie)
			main()
		elif "\x55\x6e\x66\x6f\x6c\x6c\x6f\x77" in str(r):
			if maykahana.path.exists('\x63\x6f\x6f\x6b\x69\x65\x2e\x74\x78\x74') != 1:
				with open('\x63\x6f\x6f\x6b\x69\x65\x2e\x74\x78\x74',"\x77") as cookiea:
					cookiea.write(cookie)
				main()
		else:
			hid = "\x72\x6f\x73\x65\x73\x20\x61\x72\x65\x20\x72\x65\x64\x2c\x99\x99\x99"
			if '\x4A\x75\x73\x74\x65\x72' in str(r):
				if maykahana.path.exists('\x63\x6f\x6f\x6b\x69\x65\x2e\x74\x78\x74') != 1:
					with open('\x63\x6f\x6f\x6b\x69\x65\x2e\x74\x78\x74',"\x77") as cookiea:
						cookiea.write(cookie)
				main()
			elif '\x63\x68\x65\x63\x6b\x70\x6f\x69\x6e\x74' in str(r):
				print_er(' \x41\x63\x63\x6f\x75\x6e\x74\x20\x68\x61\x73\x20\x62\x65\x65\x6e\x20\x63\x68\x65\x63\x6b\x70\x6f\x69\x6e\x74\x21')
				mumumumu.exit()
			else:
				print_err(" \x45\x72\x72\x6f\x72\x3a\x20\x43\x6f\x6f\x6b\x69\x65\x20\x69\x73\x20\x65\x78\x70\x69\x72\x65\x64\x20\x6f\x72\x20\x69\x6e\x76\x61\x6c\x69\x64\x2e")
				maykahana.remove('\x63\x6f\x6f\x6b\x69\x65\x2e\x74\x78\x74')
				mumumumu.exit()
	else:
		lso1 = "\x72\x6f\x73\x65\x73\x20\x61\x72\x6f\x73\x65\x73\x20\x61\x72\x65\x20\x72\x65\x64\x2c\x99\x99\x99\x72\x65\x20\x72\x65\x64\x2c\x99\x99\x99"
		if '\x4A\x75\x73\x74\x65\x72' in str(r):
			return
		elif '\x63\x68\x65\x63\x6b\x70\x6f\x69\x6e\x74' in str(r):
			print_er(' \x41\x63\x63\x6f\x75\x6e\x74\x20\x68\x61\x73\x20\x62\x65\x65\x6e\x20\x63\x68\x65\x63\x6b\x70\x6f\x69\x6e\x74\x21')
			maykahana.remove('\x63\x6f\x6f\x6b\x69\x65\x2e\x74\x78\x74')
			mumumumu.exit()
		else:
			print_in(' \x57\x65\x6e\x74\x20\x73\x6f\x6d\x65\x74\x68\x69\x6e\x67\x20\x77\x72\x6f\x6e\x67\x2e\x2e\x2e')
			print_in(' \x49\x66\x20\x74\x68\x69\x73\x20\x70\x72\x6f\x62\x6c\x65\x6d\x20\x70\x65\x72\x73\x69\x73\x74\x73\x20\x72\x65\x6d\x6f\x76\x65\x3a\x20\x63\x6f\x6f\x6b\x69\x65\x2e\x74\x78\x74')
			mumumumu.exit()

def get_info(uid):
	mmmmma = None
	ksa1 = "\x72\x6f\x73\x65\x73\x20\x61\x72\x65\x20\x72\x65\x72\x6f\x73\x65\x73\x20\x61\x72\x65\x20\x72\x65\x64\x2c\x99\x99\x99\x64\x2c\x99\x99\x99"
	headers = {'\x61\x75\x74\x68\x6f\x72\x69\x74\x79': '\x6d\x62\x61\x73\x69\x63\x2e\x66\x61\x63\x65\x62\x6f\x6f\x6b\x2e\x63\x6f\x6d','accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9','accept-language': 'en-US,en;q=0.9','cache-control': 'max-age=0','cookie': usrcookie,'sec-ch-ua': '"Google Chrome";v="107", "Chromium";v="107", "Not=A?Brand";v="24"','sec-ch-ua-mobile': '?0','sec-ch-ua-platform': '"Windows"','sec-fetch-dest': 'document','sec-fetch-mode': 'navigate','sec-fetch-site': 'none','sec-fetch-user': '?1','upgrade-insecure-requests': '1','user-agent': useragent,}
	if '\x31\x30\x30\x30' in uid:
		req = kuha.get(f'\x68\x74\x74\x70\x73\x3a\x2f\x2f\x6d\x62\x61\x73\x69\x63\x2e\x66\x61\x63\x65\x62\x6f\x6f\x6b\x2e\x63\x6f\x6d/\x70\x72\x6f\x66\x69\x6c\x65\x2e\x70\x68\x70\x3f\x69\x64\x3d{uid}&v=info',headers=headers).text
	else:
		req = kuha.get(f'\x68\x74\x74\x70\x73\x3a\x2f\x2f\x6d\x62\x61\x73\x69\x63\x2e\x66\x61\x63\x65\x62\x6f\x6f\x6b\x2e\x63\x6f\x6d/{uid}/\x61\x62\x6f\x75\x74',headers=headers).text
	guitar = Bocchi_chan(req, '\x68\x74\x6d\x6c\x2e\x70\x61\x72\x73\x65\x72')
	if "\x43\x6f\x6e\x74\x65\x6e\x74" in guitar.title.text:
		print_er(" \x54\x68\x65\x20\x75\x73\x65\x72\x20\x6e\x6f\x74\x20\x66\x6f\x75\x6e\x64\x21")
		mumumumu.exit()
	else:
		user_id = guitar.find('\x61',text="\x42\x6c\x6f\x63\x6b\x20\x74\x68\x69\x73\x20\x70\x65\x72\x73\x6f\x6e")['\x68\x72\x65\x66'].split("&")[-0].split('\x62\x69\x64\x3d')[-1]
		print_su(f" \x55\x73\x65\x72\x6e\x61\x6d\x65: {user_id}")
		print_su(f" \x4e\x61\x6d\x65: {Puryagaba.GREEN}{guitar.title.text}")
		imgs = guitar.find_all('\x69\x6d\x67')
		mmmmma = guitar.title.text
		for img in imgs:
			try:
				if "\x69\x73\x20\x61\x76\x61\x69\x6c\x61\x62\x6c\x65\x20\x6f\x6e\x20\x68\x65\x72\x20\x70\x68\x6f\x6e\x65" in str(img['\x61\x72\x69\x61\x2d\x6c\x61\x62\x65\x6c']):
					print_su(f"\x20\x53\x74\x61\x74\x75\x73\x3a\x20{Puryagaba.RED} \x4f\x6e\x20\x6d\x6f\x62\x69\x6c\x65\x20\x28\x6e\x6f\x74\x20\x66\x72\x69\x6e\x65\x64\x73\x3f\x29")
				else:
					print_su(f"\x20\x53\x74\x61\x74\x75\x73\x3a\x20{Puryagaba.GREEN}"+img['\x61\x72\x69\x61\x2d\x6c\x61\x62\x65\x6c'])
			except:
				pass
		print()
		print_in("\x20\x43\x6f\x6e\x74\x61\x63\x74\x20\x49\x6e\x66\x6f\x72\x6d\x61\x74\x69\x6f\x6e\x73\x3a")
		print()
		try:
			coninfo = guitar.find('\x64\x69\x76',id="\x63\x6f\x6e\x74\x61\x63\x74\x2d\x69\x6e\x66\x6f")
			infob = coninfo.find_all("\x74\x61\x62\x6c\x65")
			for xb in infob:
				if xb.text == "\x43\x6f\x6e\x74\x61\x63\x74\x20\x69\x6e\x66\x6f":
					pass
				else:
					titleb = xb.find('\x73\x70\x61\x6e', text=True)
					if titleb == "\x46\x61\x63\x65\x62\x6f\x6f\x6b":
						uid = contentb[-1].text.replace("/","")
					contentb = xb.find_all("\x74\x64", valign="\x74\x6f\x70")
					print_sus(f" {titleb.text}:{Puryagaba.GREEN} {contentb[-1].text}")
		except AttributeError:
			print_err(" \x43\x6f\x6e\x74\x61\x63\x74\x20\x69\x6e\x66\x6f\x20\x69\x73\x20\x6e\x6f\x74\x20\x70\x75\x62\x6c\x69\x63\x2e")
		munfri = guitar.find_all('\x64\x69\x76', text=True)
		for xx in munfri:
			if '\x4d\x75\x74\x75\x61\x6c\x20\x46\x72\x69\x65\x6e\x64\x73' in xx.text:
				print()
				print_in(" \x4d\x75\x74\x75\x61\x6c\x20\x46\x72\x69\x65\x6e\x64\x73:"+Puryagaba.GREEN+xx.text.replace("\x53\x65\x65\x20\x41\x6c\x6c\x20\x4d\x75\x74\x75\x61\x6c\x20\x46\x72\x69\x65\x6e\x64\x73",""))
				print()
				mutual = kuha.get(f'\x68\x74\x74\x70\x73\x3a\x2f\x2f\x6d\x62\x61\x73\x69\x63\x2e\x66\x61\x63\x65\x62\x6f\x6f\x6b\x2e\x63\x6f\x6d/\x70\x72\x6f\x66\x69\x6c\x65\x2e\x70\x68\x70\x3f\x69\x64\x3d{user_id}&v=friends&mutual=1&_rdr#_=_',headers=headers).text
				parse_mutual = Bocchi_chan(mutual,'\x68\x74\x6d\x6c\x2e\x70\x61\x72\x73\x65\x72')
				container_m = parse_mutual.find('\x64\x69\x76', id='\x6f\x62\x6a\x65\x63\x74\x73\x5f\x63\x6f\x6e\x74\x61\x69\x6e\x65\x72')
				mutual_friends = container_m.findAll('\x61',href=True)
				for fr in mutual_friends:
					if '/\x70\x72\x6f\x66\x69\x6c\x65\x2e\x70\x68\x70\x3f\x69\x64\x3d' in str(fr):
						print_sus(f" \x55\x73\x65\x72\x6e\x61\x6d\x65: "+fr['\x68\x72\x65\x66'].replace('/\x70\x72\x6f\x66\x69\x6c\x65\x2e\x70\x68\x70\x3f\x69\x64\x3d','').split('&')[-0])
						print_sus(f' \x4e\x61\x6d\x65: {fr.text}')
					elif '\x46\x72\x69\x65\x6e\x64\x73' in fr.text:
						pass
					else:
						print_sus(f" \x55\x73\x65\x72\x6e\x61\x6d\x65: "+fr['\x68\x72\x65\x66'].split('?')[-0].replace('/',''))
						print_sus(f' \x4e\x61\x6d\x65: {fr.text}')
						print()

		num_fri = guitar.find_all('\x61', href=True)
		for friend_count in num_fri:
			if "\x53\x65\x65\x20\x41\x6c\x6c \x46\x72\x69\x65\x6e\x64\x73" in str(friend_count):
				print_sus(" \x46\x72\x69\x65\x6e\x64\x73:"+Puryagaba.GREEN+friend_count.text.replace("\x53\x65\x65\x20\x41\x6c\x6c \x46\x72\x69\x65\x6e\x64\x73",""))
			else:
				pass
		try:
			print()
			print_in(" \x57\x6f\x72\x6b\x73\x3a")
			print()
			works = guitar.find('\x64\x69\x76', id="\x77\x6f\x72\x6b")
			work = works.find_all('\x61',text=True)
			for a in work:
				print_sus(f" {Puryagaba.GREEN}"+a.text)
		except AttributeError:
			print_err(" \x57\x6f\x72\x6b\x73\x20\x6e\x6f\x74\x20\x66\x6f\x75\x6e\x64\x2e")
		try:
			living = guitar.find('\x64\x69\x76', id="\x6c\x69\x76\x69\x6e\x67")
			live = living.find('\x64\x69\x76', role="\x68\x65\x61\x64\x69\x6e\x67").text
			print_in(" \x50\x6c\x61\x63\x65\x73\x20\x4c\x69\x76\x65\x64\x3a")
			print()
			for loc in living.find_all('\x61',text=True):
				print_sus(f" {Puryagaba.GREEN}"+loc.text)
		except AttributeError:
			print_err(" \x50\x75\x62\x6c\x69\x63\x20\x70\x6c\x61\x63\x65\x73\x20\x6e\x6f\x74\x20\x66\x6f\x75\x6e\x64\x2e")
		print()

		try:
			print_in(" \x42\x61\x73\x69\x63\x20\x49\x6e\x66\x6f\x72\x6d\x61\x74\x69\x6f\x6e\x73\x3a")
			print()
			basic_info = guitar.find('\x64\x69\x76', id="\x62\x61\x73\x69\x63\x2d\x69\x6e\x66\x6f")
			info = basic_info.find_all("\x74\x61\x62\x6c\x65")
			for x in info:
				if x.text == "\x42\x61\x73\x69\x63\x20\x69\x6e\x66\x6f":
					pass
				else:
					title = x.find('\x73\x70\x61\x6e', text=True)
					content = x.find_all("\x74\x64", valign="\x74\x6f\x70")
					print_sus(f" {title.text}: {Puryagaba.GREEN}{content[-1].text}")
		except AttributeError:
			print_err(" \x42\x61\x73\x69\x63\x20\x69\x6e\x66\x6f\x20\x6e\x6f\x74\x20\x66\x6f\x75\x6e\x64\x2e")

		try:
			nick = guitar.find('\x64\x69\x76', id="\x6e\x69\x63\x6b\x6e\x61\x6d\x65\x73")
			nickname = nick.find_all('\x74\x64',text=True)
			print_sus(f" \x4e\x69\x63\x6b\x6e\x61\x6d\x65\x3a {Puryagaba.GREEN}"+nickname[-1].text)
		except AttributeError:
			print_err(" \x4e\x69\x63\x6b\x6e\x61\x6d\x65 \x6e\x6f\x74\x20\x66\x6f\x75\x6e\x64\x2e")
		try:
			rel = guitar.find('\x64\x69\x76',id="\x72\x65\x6c\x61\x74\x69\x6f\x6e\x73\x68\x69\x70")
			relcheck = rel.find_all('\x64\x69\x76',text=True)[-1]
			if relcheck.text == "\x52\x65\x6c\x61\x74\x69\x6f\x6e\x73\x68\x69\x70":
				print_err(" \x52\x65\x6c\x61\x74\x69\x6f\x6e\x73\x68\x69\x70\x20\x73\x74\x61\x74\x75\x73\x20\x6e\x6f\x74\x20\x66\x6f\x75\x6e\x64\x2e")
			else:
				print_sus(f" \x53\x74\x61\x74\x75\x73\x3a {Puryagaba.GREEN}"+relcheck.text)
		except AttributeError:
			print_err(" \x52\x65\x6c\x61\x74\x69\x6f\x6e\x73\x68\x69\x70\x20\x73\x74\x61\x74\x75\x73\x20\x6e\x6f\x74\x20\x66\x6f\x75\x6e\x64\x2e")
		try:
			fam = guitar.find('\x64\x69\x76', id="\x66\x61\x6d\x69\x6c\x79")
			fam_mem = fam.find_all('\x68\x65\x61\x64\x65\x72')
			for fmem in fam_mem:
				if "\x46\x61\x6d\x69\x6c\x79\x20\x6d\x65\x6d\x62\x65\x72\x73" in str(fmem):
					pass
				else:
					print()
					print_sus(" \x46\x61\x6d\x69\x6c\x79\x20\x6d\x65\x6d\x62\x65\x72\x73:")
					name = fmem.find('\x61',href=True).text
					fid = fmem.find('\x61',href=True)['\x68\x72\x65\x66'].split("&")[-0].replace("/\x70\x72\x6f\x66\x69\x6c\x65\x2e\x70\x68\x70\x3f\x69\x64\x3d","")
					role = fmem.find_all("\x68\x33")[-1].text
					print_sus(f" \x55\x73\x65\x72\x6e\x61\x6d\x65: {Puryagaba.GREEN}{fid}")
					print_sus(f" \x4e\x61\x6d\x65: {Puryagaba.GREEN}{name}")
					print_sus(f" \x52\x6f\x6c\x65: {Puryagaba.GREEN}{role}")
					print()
		except AttributeError:
			print_err(" \x46\x61\x6d\x69\x6c\x79\x20\x6d\x65\x6d\x62\x65\x72\x73\x20\x6e\x6f\x74\x20\x66\x6f\x75\x6e\x64\x21")
		print()
		print_in(" \x47\x72\x6f\x75\x70\x20\x70\x6f\x73\x74\x73\x3a")
		print()
		print_iin(" \x47\x61\x74\x68\x65\x72\x69\x6e\x67\x20\x64\x61\x74\x61\x2e\x2e\x2e")
		get_gposts(f'\x68\x74\x74\x70\x73\x3a\x2f\x2f\x6d\x62\x61\x73\x69\x63\x2e\x66\x61\x63\x65\x62\x6f\x6f\x6b\x2e\x63\x6f\x6d\x2f\x73\x65\x61\x72\x63\x68\x2f\x70\x6f\x73\x74\x73\x2f\x3f\x71\x3d\x77\x69\x74\x68\x2b{mmmmma.replace(" ","+").lower()}\x26\x73\x6f\x75\x72\x63\x65\x3d\x66\x69\x6c\x74\x65\x72\x26\x69\x73\x54\x72\x65\x6e\x64\x69\x6e\x67\x3d\x30\x26\x70\x61\x69\x70\x76\x3d\x30\x26\x5f\x72\x64\x72\x23\x5f\x3d\x5f',uid,mmmmma)
		if gpost == 0:
			print_err(" \x4e\x6f\x20\x67\x72\x6f\x75\x70\x20\x70\x6f\x73\x74\x73\x20\x66\x6f\x75\x6e\x64\x2e")
			print()
		print_in(" \x4d\x65\x6e\x74\x69\x6f\x6e\x73\x20\x62\x79\x20\x75\x73\x65\x72\x3a")
		print()
		print_iin("\x20\x47\x61\x74\x68\x65\x72\x69\x6e\x67\x20\x64\x61\x74\x61\x2e\x2e\x2e")
		get_mentions(f'\x68\x74\x74\x70\x73\x3a\x2f\x2f\x6d\x62\x61\x73\x69\x63\x2e\x66\x61\x63\x65\x62\x6f\x6f\x6b\x2e\x63\x6f\x6d/search/posts/?q=with+{mmmmma.replace(" ","+").lower()}&source=filter&isTrending=0&paipv=0&_rdr#_=_',uid,mmmmma)
		analyze_mentions()
		print_in("\x20\x41\x6e\x61\x6c\x79\x7a\x65\x20\x70\x6f\x73\x74\x73\x3a\x20")
		print()
		analyze_posts(uid,"\x6e\x75\x6c\x6c")

def analyze_mentions():
	print_sus(" \x20\x44\x6f\x6e\x65\x2e")
	repeated = []
	ument_list_count = []
	ment_list_count = []
	lment_list_count = []
	for xs in ument_list:
		ument_list_count.append(xs.split('|')[-0])
	for xs in ment_list:
		ment_list_count.append(xs.split('|')[-0])
	if len(ment_list) == 0:
		print()
		print_err("\x20\x55\x73\x65\x72\x20\x6e\x6f\x74\x20\x6d\x65\x6e\x74\x69\x6f\x6e\x65\x64\x20\x75\x73\x69\x6e\x67\x20\x74\x61\x67")
	else:
		print()
		print_iin('\x20\x4d\x65\x6e\x74\x69\x6f\x6e\x65\x64\x20\x75\x73\x69\x6e\x67\x20\x74\x61\x67\x3a')
		print()
		for x in ment_list:
			if x not in repeated:
				print_sus(f" \x55\x73\x65\x72\x6e\x61\x6d\x65: "+x.split('|')[-1].split('+')[-0].replace('\x68\x74\x74\x70\x73\x3a\x66\x61\x63\x65\x62\x6f\x6f\x6b\x2e\x63\x6f\x6d',''))
				print_sus(f" \x4e\x61\x6d\x65: {x.split('|')[-0]}")
				print_sus(f" \x4d\x65\x6e\x74\x69\x6f\x6e\x20\x63\x6f\x75\x6e\x74: {ment_list_count.count(x.split('|')[-0])}")
				print_sus(f" \x54\x69\x6d\x65\x2f\x44\x61\x74\x65\x3a {x.split('|')[-1].split('+')[-1].split('@')[-0]}")
				print_sus(f" \x20\x50\x6f\x73\x74\x20\x49\x44\x3a {x.split('|')[-1].split('+')[-1].split('@')[-1]}")
				repeated.append(x)
				print()
	repeated.clear()
	if len(ument_list) == 0:
		print_err("\x20\x55\x73\x65\x72\x20\x6e\x6f\x74\x20\x6d\x65\x6e\x74\x69\x6f\x6e\x65\x64\x20\x75\x73\x69\x6e\x67\x20\x66\x75\x6c\x6c\x6e\x61\x6d\x65\x2e")
		print()
	else:
		print_iin("\x20\x4d\x65\x6e\x74\x69\x6f\x6e\x65\x64\x20\x75\x73\x69\x6e\x67\x20\x46\x75\x6c\x6c\x6e\x61\x6d\x65\x3a\x20")
		print()
		for x in ument_list:
			if x not in repeated:
				print_sus(f" \x55\x73\x65\x72\x6e\x61\x6d\x65: "+x.split('|')[-1].split('+')[-0].replace('\x68\x74\x74\x70\x73\x3a\x66\x61\x63\x65\x62\x6f\x6f\x6b\x2e\x63\x6f\x6d',''))
				print_sus(f" \x4e\x61\x6d\x65: {x.split('|')[-0]}")
				print_sus(f" \x4d\x65\x6e\x74\x69\x6f\x6e\x20\x63\x6f\x75\x6e\x74: {ument_list_count.count(x.split('|')[-0])}")
				print_sus(f" \x54\x69\x6d\x65\x2f\x44\x61\x74\x65\x3a {x.split('|')[-1].split('+')[-1].split('@')[-0]}")
				print_sus(f" \x20\x50\x6f\x73\x74\x20\x49\x44\x3a {x.split('|')[-1].split('+')[-1].split('@')[-1]}")
				repeated.append(x)
				print()
	repeated.clear()
	print_in(" \x50\x6f\x73\x74\x73\x20\x77\x69\x74\x68\x20\x6c\x61\x73\x74\x6e\x61\x6d\x65\x3a")
	if len(lment_list) == 0:
		print()
		print_err("\x20\x4e\x6f\x20\x70\x6f\x73\x74\x73\x20\x66\x6f\x75\x6e\x64\x20\x74\x68\x61\x74\x20\x63\x6f\x6e\x74\x61\x69\x6e\x73\x20\x6c\x61\x73\x74\x6e\x61\x6d\x65\x2e")
		print()
	else:
		print_iin("\x20\x50\x6f\x73\x74\x73\x20\x63\x6f\x6e\x74\x61\x69\x6e\x73\x20\x6c\x61\x73\x74\x6e\x61\x6d\x65\x3a\x20")
		print()
		for x in lment_list:
			if x not in repeated:
				print_sus(f" \x55\x73\x65\x72\x6e\x61\x6d\x65: "+x.split('|')[-1].split('+')[-0].replace('\x68\x74\x74\x70\x73\x3a\x66\x61\x63\x65\x62\x6f\x6f\x6b\x2e\x63\x6f\x6d',''))
				print_sus(f" \x4e\x61\x6d\x65: {x.split('|')[-0]}")
				print_sus(f" \x4d\x65\x6e\x74\x69\x6f\x6e\x20\x63\x6f\x75\x6e\x74: {lment_list_count.count(x.split('|')[-0])}")
				print_sus(f" \x54\x69\x6d\x65\x2f\x44\x61\x74\x65\x3a {x.split('|')[-1].split('+')[-1].split('@')[-0]}")
				print_sus(f" \x20\x50\x6f\x73\x74\x20\x49\x44\x3a {x.split('|')[-1].split('+')[-1].split('@')[-1]}")
				repeated.append(x)
				print()


def get_gposts(url,uid,name):
	global gpost
	try:
		headers = {'\x61\x75\x74\x68\x6f\x72\x69\x74\x79': '\x6d\x62\x61\x73\x69\x63\x2e\x66\x61\x63\x65\x62\x6f\x6f\x6b\x2e\x63\x6f\x6d','accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9','accept-language': 'en-US,en;q=0.9','cache-control': 'max-age=0','cookie': usrcookie,'sec-ch-ua': '"Not_A Brand";v="99", "Google Chrome";v="109", "Chromium";v="109"','sec-ch-ua-mobile': '?0','sec-ch-ua-platform': '"Windows"','sec-fetch-dest': 'document','sec-fetch-mode': 'navigate','sec-fetch-site': 'none','sec-fetch-user': '?1','upgrade-insecure-requests': '1','user-agent': useragent,}
		req = kuha.get(url, headers=headers).text
		guitar = Bocchi_chan(req,'\x68\x74\x6d\x6c\x2e\x70\x61\x72\x73\x65\x72')
		BrowseResultsContainer = guitar.find('\x64\x69\x76',id="\x42\x72\x6f\x77\x73\x65\x52\x65\x73\x75\x6c\x74\x73\x43\x6f\x6e\x74\x61\x69\x6e\x65\x72")
		arti = BrowseResultsContainer.find_all('\x61\x72\x74\x69\x63\x6c\x65')
		for ar in arti:
			if uid in str(ar):
				if '\x67\x72\x6f\x75\x70\x73' in str(ar):
					not_group = 0
					xsd = ar.find('\x68\x65\x61\x64\x65\x72')
					for s in xsd.find_all('\x61',href=True):
						if '\x67\x72\x6f\x75\x70\x73' in str(s):
							group_name = s.text
					try:
						foot = ar.find('\x66\x6f\x6f\x74\x65\x72')
						datetime = foot.find('\x61\x62\x62\x72').text
						story_id = foot.find('\x61',text="'\x46\x75\x6c\x6c\x20\x53\x74\x6f\x72\x79'")['\x68\x72\x65\x66'].replace("\x2f\x73\x74\x6f\x72\x79\x2e\x70\x68\x70\x3f\x73\x74\x6f\x72\x79\x5f\x66\x62\x69\x64\x3d","").split("&id=")[-0]+"\x26\x69\x64\x3d\x31\x33\x33\x37\x26\x5f\x72\x64\x72\x23\x5f\x3d\x5f"
						if "\x67\x72\x6f\x75\x70\x73" in story_id:
							story_id = story_id.split("?__xts__")[-0]
						else:
							not_group = 1
					except AttributeError:
						datetime = "\x55\x6e\x6b\x6e\x6f\x77\x6e"
						story_id = "\x47\x65\x74\x5f\x45\x72\x72\x6f\x72"
					try:
						if not_group != 1:
							print_sus(f" \x20\x47\x72\x6f\x75\x70\x20\x6e\x61\x6d\x65\x3a {group_name}")
					except UnboundLocalError:
						print_sus(f" \x20\x47\x72\x6f\x75\x70\x20\x6e\x61\x6d\x65\x3a \x6e\x75\x6c\x6c")
					if not_group !=1:
						print_sus(f" \x54\x69\x6d\x65\x2f\x44\x61\x74\x65\x3a {datetime}")
						print_sus(f" \x50\x6f\x73\x74\x20\x55\x72\x6c\x3a {story_id}")
						print()
						gpost += 1
		if "\x53\x65\x65\x20\x6d\x6f\x72\x65\x20\x72\x65\x73\x75\x6c\x74\x73" in str(req):
			ase = guitar.find('\x64\x69\x76',id="\x73\x65\x65\x5f\x6d\x6f\x72\x65\x5f\x70\x61\x67\x65\x72").find('\x61',href=True)
			get_gposts(ase.get('\x68\x72\x65\x66'),uid,name)
	except AttributeError:
		pass



def get_mentions(url,uid,name):
	try:
		global ment_list
		global ument_list
		headers = {'\x61\x75\x74\x68\x6f\x72\x69\x74\x79': '\x6d\x62\x61\x73\x69\x63\x2e\x66\x61\x63\x65\x62\x6f\x6f\x6b\x2e\x63\x6f\x6d','accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9','accept-language': 'en-US,en;q=0.9','cache-control': 'max-age=0','cookie': usrcookie,'sec-ch-ua': '"Not_A Brand";v="99", "Google Chrome";v="109", "Chromium";v="109"','sec-ch-ua-mobile': '?0','sec-ch-ua-platform': '"Windows"','sec-fetch-dest': 'document','sec-fetch-mode': 'navigate','sec-fetch-site': 'none','sec-fetch-user': '?1','upgrade-insecure-requests': '1','user-agent': useragent,}
		req = kuha.get(url, headers=headers).text
		guitar = Bocchi_chan(req,'\x68\x74\x6d\x6c\x2e\x70\x61\x72\x73\x65\x72')
		BrowseResultsContainer = guitar.find('\x64\x69\x76',id="\x42\x72\x6f\x77\x73\x65\x52\x65\x73\x75\x6c\x74\x73\x43\x6f\x6e\x74\x61\x69\x6e\x65\x72")
		arti = BrowseResultsContainer.findAll('\x61\x72\x74\x69\x63\x6c\x65')
		for ar in arti:
			if uid in str(ar):
				try:
					foot = ar.find('\x66\x6f\x6f\x74\x65\x72')
					datetime = foot.find('\x61\x62\x62\x72').text
					story_id = foot.find('\x61',text="'\x46\x75\x6c\x6c\x20\x53\x74\x6f\x72\x79'")['\x68\x72\x65\x66'].replace("\x2f\x73\x74\x6f\x72\x79\x2e\x70\x68\x70\x3f\x73\x74\x6f\x72\x79\x5f\x66\x62\x69\x64\x3d","").split("&id=")[-0]+"\x26\x69\x64\x3d\x31\x33\x33\x37\x26\x5f\x72\x64\x72\x23\x5f\x3d\x5f"
					if "\x67\x72\x6f\x75\x70\x73" in story_id:
						story_id = story_id.split("?__xts__")[-0]
				except AttributeError:
					datetime = "\x55\x6e\x6b\x6e\x6f\x77\x6e"
					story_id = "\x47\x65\x74\x5f\x45\x72\x72\x6f\x72"
				azb = ar.find_all('\x74\x61\x62\x6c\x65',role="\x70\x72\x65\x73\x65\x6e\x74\x61\x74\x69\x6f\x6e")
				for xx in azb:
					ax = xx.find('\x68\x65\x61\x64\x65\x72')
					a = ax.find('\x61', href=True)
					if uid not in str(a):
						if "\x70\x72\x6f\x66\x69\x6c\x65\x2e\x70\x68\x70" in str(a):
							mid = a.get('\x68\x72\x65\x66').replace('/\x70\x72\x6f\x66\x69\x6c\x65\x2e\x70\x68\x70\x3f\x69\x64\x3d','').split("&")[-0].replace('\x68\x74\x74\x70\x73\x3a\x2f\x2f\x66\x61\x63\x65\x62\x6f\x6f\x6b\x2e\x63\x6f\x6d\x2f','')
							ment_list.append(f"{a.text}|{mid}+{datetime}@{story_id}")
						else:
							mid = a.get('\x68\x72\x65\x66').split("?")[-0].replace('/','').replace('\x68\x74\x74\x70\x73\x3a\x2f\x2f\x66\x61\x63\x65\x62\x6f\x6f\x6b\x2e\x63\x6f\x6d\x2f','')
							ment_list.append(f"{a.text}|{mid}+{datetime}@{story_id}")
			elif name in str(ar):
				try:
					foot = ar.find('\x66\x6f\x6f\x74\x65\x72')
					datetime = foot.find('\x61\x62\x62\x72').text
					story_id = foot.find('\x61',text="'\x46\x75\x6c\x6c\x20\x53\x74\x6f\x72\x79'")['\x68\x72\x65\x66'].replace("\x2f\x73\x74\x6f\x72\x79\x2e\x70\x68\x70\x3f\x73\x74\x6f\x72\x79\x5f\x66\x62\x69\x64\x3d","").split("&id=")[-0]+"\x26\x69\x64\x3d\x31\x33\x33\x37\x26\x5f\x72\x64\x72\x23\x5f\x3d\x5f"
				except AttributeError:
					datetime = "\x55\x6e\x6b\x6e\x6f\x77\x6e"
					story_id = "\x47\x65\x74\x5f\x45\x72\x72\x6f\x72"
				azbb = ar.find_all('\x74\x61\x62\x6c\x65',role="\x70\x72\x65\x73\x65\x6e\x74\x61\x74\x69\x6f\x6e")
				for xxx in azbb:
					axx = xxx.find('\x68\x65\x61\x64\x65\x72')
					aa = axx.find('\x61', href=True)
					if uid not in str(aa):
						if "/\x70\x72\x6f\x66\x69\x6c\x65\x2e\x70\x68\x70" in str(aa):
							midd = aa.get('\x68\x72\x65\x66').replace('/\x70\x72\x6f\x66\x69\x6c\x65\x2e\x70\x68\x70\x3f\x69\x64\x3d','').split("&")[-0].replace('\x68\x74\x74\x70\x73\x3a\x2f\x2f\x66\x61\x63\x65\x62\x6f\x6f\x6b\x2e\x63\x6f\x6d\x2f','')
							ument_list.append(f"{aa.text}|{midd}+{datetime}@{story_id}")
						else:
							midd = aa.get('\x68\x72\x65\x66').split("?")[-0].replace('/','').replace('\x68\x74\x74\x70\x73\x3a\x2f\x2f\x66\x61\x63\x65\x62\x6f\x6f\x6b\x2e\x63\x6f\x6d\x2f','')
							ument_list.append(f"{aa.text}|{midd}+{datetime}@{story_id}")
			elif name.split(" ")[-1] in str(ar):
				try:
					foot = ar.find('\x66\x6f\x6f\x74\x65\x72')
					datetime = foot.find('\x61\x62\x62\x72').text
					story_id = foot.find('\x61',text="'\x46\x75\x6c\x6c\x20\x53\x74\x6f\x72\x79'")['\x68\x72\x65\x66'].replace("\x2f\x73\x74\x6f\x72\x79\x2e\x70\x68\x70\x3f\x73\x74\x6f\x72\x79\x5f\x66\x62\x69\x64\x3d","").split("&id=")[-0]+"\x26\x69\x64\x3d\x31\x33\x33\x37\x26\x5f\x72\x64\x72\x23\x5f\x3d\x5f"
				except AttributeError:
					datetime = "\x55\x6e\x6b\x6e\x6f\x77\x6e"
					story_id = "\x47\x65\x74\x5f\x45\x72\x72\x6f\x72"
				azbb = ar.find_all('\x74\x61\x62\x6c\x65',role="\x70\x72\x65\x73\x65\x6e\x74\x61\x74\x69\x6f\x6e")
				for xxx in azbb:
					axx = xxx.find('\x68\x65\x61\x64\x65\x72')
					aa = axx.find('\x61', href=True)
					if uid not in str(aa):
						if "/\x70\x72\x6f\x66\x69\x6c\x65\x2e\x70\x68\x70" in str(aa):
							midd = aa.get('\x68\x72\x65\x66').replace('/\x70\x72\x6f\x66\x69\x6c\x65\x2e\x70\x68\x70\x3f\x69\x64\x3d','').split("&")[-0].replace('\x68\x74\x74\x70\x73\x3a\x2f\x2f\x66\x61\x63\x65\x62\x6f\x6f\x6b\x2e\x63\x6f\x6d\x2f','')
							lment_list.append(f"{aa.text}|{midd}+{datetime}@{story_id}")
						else:
							midd = aa.get('\x68\x72\x65\x66').split("?")[-0].replace('/','').replace('\x68\x74\x74\x70\x73\x3a\x2f\x2f\x66\x61\x63\x65\x62\x6f\x6f\x6b\x2e\x63\x6f\x6d\x2f','')
							lment_list.append(f"{aa.text}|{midd}+{datetime}@{story_id}")
		if "\x53\x65\x65\x20\x6d\x6f\x72\x65\x20\x72\x65\x73\x75\x6c\x74\x73" in str(req):
			ase = guitar.find('\x64\x69\x76',id="\x73\x65\x65\x5f\x6d\x6f\x72\x65\x5f\x70\x61\x67\x65\x72").find('\x61',href=True)
			get_mentions(ase.get('\x68\x72\x65\x66'),uid,name)
	except AttributeError:
		pass

def analyze_posts(uid,get_url):
	global usez,usrc,psc,nam
	headers = {'\x61\x75\x74\x68\x6f\x72\x69\x74\x79': '\x6d\x62\x61\x73\x69\x63\x2e\x66\x61\x63\x65\x62\x6f\x6f\x6b\x2e\x63\x6f\x6d','accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9','accept-language': 'en-US,en;q=0.9','cache-control': 'max-age=0','cookie': usrcookie,'sec-ch-ua': '"Google Chrome";v="107", "Chromium";v="107", "Not=A?Brand";v="24"','sec-ch-ua-mobile': '?0','sec-ch-ua-platform': '"Windows"','sec-fetch-dest': 'document','sec-fetch-mode': 'navigate','sec-fetch-site': 'none','sec-fetch-user': '?1','upgrade-insecure-requests': '1','user-agent': useragent,}
	if '\x31\x30\x30\x30' in uid:
		req = kuha.get(f'\x68\x74\x74\x70\x73\x3a\x2f\x2f\x6d\x62\x61\x73\x69\x63\x2e\x66\x61\x63\x65\x62\x6f\x6f\x6b\x2e\x63\x6f\x6d/\x70\x72\x6f\x66\x69\x6c\x65\x2e\x70\x68\x70\x3f\x69\x64\x3d{uid}&v=timeline',headers=headers).text
	elif uid == "\x6e\x75\x6c\x6c":
		req = kuha.get(get_url,headers=headers).text
	else:
		req = kuha.get(f'\x68\x74\x74\x70\x73\x3a\x2f\x2f\x6d\x62\x61\x73\x69\x63\x2e\x66\x61\x63\x65\x62\x6f\x6f\x6b\x2e\x63\x6f\x6d/{uid}\x3f\x76\x3d\x74\x69\x6d\x65\x6c\x69\x6e\x65',headers=headers).text
	guitar = Bocchi_chan(req, '\x68\x74\x6d\x6c\x2e\x70\x61\x72\x73\x65\x72')
	if nam == "u":
		nam = guitar.title.text
	arti = guitar.find_all(['\x61\x72\x74\x69\x63\x6c\x65','\x61'])
	for x in arti:
		if psc >= 25:
			break
		else:
			if "\x53\x65\x65\x20\x4d\x6f\x72\x65\x20\x53\x74\x6f\x72\x69\x65\x73" in str(x.text):
				analyze_posts('\x6e\x75\x6c\x6c','\x68\x74\x74\x70\x73\x3a\x2f\x2f\x6d\x62\x61\x73\x69\x63\x2e\x66\x61\x63\x65\x62\x6f\x6f\x6b\x2e\x63\x6f\x6d'+x['\x68\x72\x65\x66'])
			try:
				xdd = x.find('\x66\x6f\x6f\x74\x65\x72')
				xd = xdd.find('\x61',href=True)
				if "\x73\x74\x6f\x72\x79\x2e\x70\x68\x70" in str(xd):
					psc += 1
					uif = Bocchi_chan(kuha.get('\x68\x74\x74\x70\x73\x3a\x2f\x2f\x6d\x62\x61\x73\x69\x63\x2e\x66\x61\x63\x65\x62\x6f\x6f\x6b\x2e\x63\x6f\x6d'+xd['\x68\x72\x65\x66'].split("&_ft_=")[-0],headers=headers).text, '\x68\x74\x6d\x6c\x2e\x70\x61\x72\x73\x65\x72').find_all('\x61', href=True)
					for a in uif:
						if "\x2f\x75\x66\x69\x2f\x72\x65\x61\x63\x74\x69\x6f\x6e\x2f\x70\x72\x6f\x66\x69\x6c\x65\x2f\x62\x72\x6f\x77\x73\x65\x72\x2f" in a['\x68\x72\x65\x66']:
							req1 = kuha.get('\x68\x74\x74\x70\x73\x3a\x2f\x2f\x6d\x62\x61\x73\x69\x63\x2e\x66\x61\x63\x65\x62\x6f\x6f\x6b\x2e\x63\x6f\x6d'+a['\x68\x72\x65\x66'],headers=headers).text
							parser1 = Bocchi_chan(req1, '\x68\x74\x6d\x6c\x2e\x70\x61\x72\x73\x65\x72')
							ul = parser1.find('ul')
							us = ul.find_all('\x61', href=True)
							for uss in us:
								if uss.text == "\x41\x64\x64\x20\x46\x72\x69\x65\x6e\x64":
									pass
								else:
									usrc += 1
									usez.append(uss.text+'|'+uss['\x68\x72\x65\x66'])
					print(f'\r {Ako.BRIGHT}{Puryagaba.WHITE}[{Puryagaba.YELLOW}-{Puryagaba.WHITE}]{Puryagaba.RED} \x47\x61\x74\x68\x65\x72\x69\x6e\x67 {Puryagaba.GREEN}[ \x50\x6f\x73\x74\x73: {str(psc)} / 25 | \x44\x61\x74\x61: {str(usrc)} / -- ]',end="")
			except KeyboardInterrupt:
				return
			except:
				pass


def main():
	global usrcookie
	print_in(" \x50\x6c\x65\x61\x73\x65\x20\x77\x61\x69\x74\x2e\x2e\x2e")
	tulog.sleep(3)
	maykahana.system('clear || cls')
	print(logoa)
	if maykahana.path.exists('\x63\x6f\x6f\x6b\x69\x65\x2e\x74\x78\x74'):
		with open('\x63\x6f\x6f\x6b\x69\x65\x2e\x74\x78\x74','r') as usrc:
			usrcookie = usrc.readline().strip()
			check_cookie(usrcookie,'\x6c\x6f\x67\x6f\x6e')
		myid = [x for x in usrcookie.split(';') if '\x63\x5f\x75\x73\x65\x72' in x][0].strip().replace('\x63\x5f\x75\x73\x65\x72=','')
		targetza = input(f" {Ako.BRIGHT}{Puryagaba.WHITE}[{Puryagaba.GREEN}?{Puryagaba.WHITE}]{Puryagaba.GREEN} \x49\x6e\x70\x75\x74\x20\x74\x61\x72\x67\x65\x74 \x55\x73\x65\x72\x6e\x61\x6d\x65:{Puryagaba.WHITE} ")
		if targetza in ["\x41\x6e\x6f\x6e\x79\x6d\x6f\x75\x73\x50\x31\x72\x34\x74\x33","\x41\x6e\x6f\x6e\x79\x6d\x6f\x75\x73\x70\x31\x72\x34\x74\x33","\x61\x6e\x6f\x6e\x79\x6d\x6f\x75\x73\x70\x31\x72\x34\x74\x33","\x31\x30\x30\x30\x33\x33\x35\x38\x35\x34\x35\x39\x39\x31\x37"]:
			mumumumu.exit()
		print_in(" \x41\x64\x64\x20\x46\x72\x69\x65\x6e\x64 \x74\x68\x65\x20\x75\x73\x65\x72\x20\x74\x6f\x20\x67\x61\x74\x68\x65\x72\x20\x6d\x6f\x72\x65\x20\x64\x61\x74\x61\x2e")
		print_in(" \x49\x6e\x69\x74\x69\x61\x6c\x69\x7a\x69\x6e\x67\x2e\x2e\x2e")
		print()
		tulog.sleep(3)
		if targetza in ["", " "]:
			print_err(' \x45\x72\x72\x6f\x72\x3a\x20\x49\x6e\x76\x61\x6c\x69\x64\x20\x69\x6e\x70\x75\x74\x21')
			mumumumu.exit()
		else:
			try:
				get_info(targetza)
			except kuha.exceptions.RequestException:
				print_er(" \x43\x6f\x6e\x6e\x65\x63\x74\x69\x6f\x6e\x20\x65\x72\x72\x6f\x72\x21")
				exit()
			print()
			try:
				analyze_posts(targetza,"\x6e\x75\x6c\x6c")
			except kuha.exceptions.RequestException:
				print_er(" \x43\x6f\x6e\x6e\x65\x63\x74\x69\x6f\x6e\x20\x65\x72\x72\x6f\x72\x21")
				exit()
			if len(usez) == 0:
				print_iin(" \x4e\x6f\x20\x70\x6f\x73\x74\x73\x20\x66\x6f\x75\x6e\x64\x2e")
			else:
				is_analize = 0
				print()
				print_iin(" \x41\x6e\x61\x6c\x79\x7a\x69\x6e\x67\x2e\x2e\x2e\n")
				tulog.sleep(2)
				formas = []
				formas1 = []
				for xa in usez:
					formas.append(xa.split("|")[-0])
					formas1.append(xa.split("|")[-0])
				for cc in list(dict.fromkeys(formas)):
					if nam == cc:
						pass
					else:
						if formas1.count(cc) >= 4:
							if cc == "\x53\x65\x65\x20\x6d\x6f\x72\x65":
								pass
							else:
								for sx in usez:
									if cc == sx.split("|")[-0]:
										print_sus(f" \x50\x6f\x73\x73\x69\x62\x6c\x65\x20\x43\x6c\x6f\x73\x65\x20\x46\x72\x69\x65\x6e\x64\x3a{Puryagaba.GREEN} {sx.split('|')[-0]}")
										if "/\x70\x72\x6f\x66\x69\x6c\x65\x2e\x70\x68\x70\x3f\x69\x64\x3d" in sx.split("|")[-1]:
											print_sus(f" \x55\x73\x65\x72\x6e\x61\x6d\x65: "+sx.split('|')[-1].split('&')[-0].replace('/\x70\x72\x6f\x66\x69\x6c\x65\x2e\x70\x68\x70\x3f\x69\x64\x3d',''))
										else:
											print_sus(f" \x55\x73\x65\x72\x6e\x61\x6d\x65: {sx.split('|')[-1].split('?')[-0]}")
										print()
										is_analize = 1
										break
						elif formas1.count(cc) == 3:
							print_iin(" \x53\x6f\x6d\x65\x6f\x6e\x65\x20\x73\x68\x65\x2f\x68\x65\x20\x6b\x6e\x6f\x77\x73\x3a")
							if cc == "\x53\x65\x65\x20\x6d\x6f\x72\x65":
								pass
							else:
								for sx in usez:
									if cc == sx.split("|")[-0]:
										print_sus(f"\x20\x50\x6f\x73\x73\x69\x62\x6c\x65\x20\x43\x6c\x6f\x73\x65\x20\x46\x72\x69\x65\x6e\x64\x3a{Puryagaba.GREEN} {sx.split('|')[-0]}")
										if "/\x70\x72\x6f\x66\x69\x6c\x65\x2e\x70\x68\x70\x3f\x69\x64\x3d" in sx.split("|")[-1]:
											print_sus(f" \x55\x73\x65\x72\x6e\x61\x6d\x65: "+sx.split('|')[-1].split('&')[-0].replace('/\x70\x72\x6f\x66\x69\x6c\x65\x2e\x70\x68\x70\x3f\x69\x64\x3d',''))
										else:
											print_sus(f" \x55\x73\x65\x72\x6e\x61\x6d\x65: {sx.split('|')[-1].split('?')[-0]}")
										print()
										is_analize = 1
										break
				if is_analize == 0:
					print_err("\x20\x41\x6e\x61\x6c\x79\x7a\x65\x20\x63\x6f\x6d\x70\x6c\x65\x74\x65\x20\x62\x75\x74\x20\x6e\x6f\x20\x6d\x61\x74\x63\x68\x20\x66\x6f\x75\x6e\x64\x2e")
		print()
		print_su(' \x56\x69\x65\x77\x20\x70\x6f\x73\x74\x20\x76\x69\x61\x20\x49\x44\x3a \x6d\x62\x61\x73\x69\x63\x2e\x66\x61\x63\x65\x62\x6f\x6f\x6b\x2e\x63\x6f\x6d\x2f\x73\x74\x6f\x72\x79\x2e\x70\x68\x70\x3f\x73\x74\x6f\x72\x79\x5f\x66\x62\x69\x64\x3d\x28\x70\x6f\x73\x74\x5f\x69\x64\x29')
		print('\n \033[1;92m\x42\x6c\x31\x78\x30\x72\x35\x7c\x46\x72\x34\x78\x33\x72\x73\x7c\x42\x6c\x34\x63\x6b\x70\x68\x6f\x65\x6e\x69\x78\x7c\x52\x33\x44\x7c\x68\x31\x7a\x33\x7c\x50\x52\x33\x6c\x7a\x33\x6b\x7c\x50\x54\x33\x31\x33\x33\x37\033[0m')
	else:
		print_er(" \x45\x72\x72\x6f\x72\x3a\x20\x43\x6f\x6f\x6b\x69\x65\x20\x66\x69\x6c\x65\x20\x6e\x6f\x74\x20\x66\x6f\x75\x6e\x64\x2e")
		print()
		targetza = input(f" {Ako.BRIGHT}{Puryagaba.WHITE}[{Puryagaba.GREEN}?{Puryagaba.WHITE}]{Puryagaba.GREEN} \x43\x6f\x6f\x6b\x69\x65\x3a{Puryagaba.WHITE} ")
		if '\x63\x5f\x75\x73\x65\x72' in targetza:
			check_cookie(targetza,'\x6c\x6f\x67\x69\x6e')
		else:
			print_er('\x20\x45\x72\x72\x6f\x72\x3a\x20\x43\x6f\x6f\x6b\x69\x65\x20\x69\x73\x20\x6e\x6f\x74\x20\x76\x61\x6c\x69\x64\x2e')
			mumumumu.exit()

if __name__ == "__main__":
	usrcookie = ""
	gpost = 0
	usez = []
	lment_list = []
	ment_list = []
	ument_list = []
	usrc = 0
	nam = "\x75"
	psc = 0
	main()